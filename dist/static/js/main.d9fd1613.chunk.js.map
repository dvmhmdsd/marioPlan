{"version":3,"sources":["components/layout/signedIn.js","actions/authAction.js","components/layout/signedOut.js","components/layout/navbar.js","components/dashboard/notification.js","components/project/projectSummary.js","components/project/projectList.js","components/dashboard/dashboard.js","components/project/projectDetails.js","components/auth/signin.js","components/auth/signup.js","components/project/createProject.js","actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authRecucer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fireConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","Link","isEmpty","signedOut","signedIn","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projectSummary","Dashboard","_this$props","this","uid","projectList","notification","Redirect","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","authMessage","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","fname","lname","signUp","authError","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","fName","lName","CreateProject","createProject","history","push","fireStore","authorId","add","objectSpread","Date","App","BrowserRouter","navbar","Switch","Route","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","concat","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","arguments","length","undefined","action","message","author","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fireConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d9fd1613.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { signOut } from '../../actions/authAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/create\">New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" onClick={props.signOut}>Log Out</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating lighten-1 green\">\r\n                    {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'LOGOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          fName: newUser.fname,\r\n          lName: newUser.lname,\r\n          initials: newUser.fname[0] + newUser.lname[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/signup\">Sign up</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signin\">Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './signedIn';\r\nimport SignedOutLinks from './signedOut';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n                {/* <SignedInLinks />\r\n                <SignedOutLinks /> */}\r\n                {auth.isEmpty ? (<SignedOutLinks />) : (<SignedInLinks profile={profile} />)}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"green-text\">{item.user}</span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{ project.title }</span>\r\n                <p>posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">\r\n                    {moment(project.createdAt.toDate()).calendar()}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './projectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = (props) => {\r\n    let {projects} = props;\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './notification';\r\nimport ProjectList from '../project/projectList';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '../../../../../AppData/Local/Microsoft/TypeScript/3.2/node_modules/redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const {projects, auth, notifications} = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        projects: state.firestore.ordered.projects, // project is from the rootReducer and projects is from the projectReducer\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        { collection: 'notifications', limit: 3 }\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <p>posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                        <p>\r\n                            {moment(project.createdAt.toDate()).calendar()}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading ...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../actions/authAction';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Signin extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n  render() {\r\n      const {auth} = this.props;\r\n      if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container section\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button className=\"btn green z-depth-0 lighten-1\">Login</button>\r\n                <div className=\"red-text center\">\r\n                    <p>\r\n                        {this.props.authMessage ? this.props.authMessage : null}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authMessage: state.auth.authMessage,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { signUp } from '../../actions/authAction';\r\n\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        fname: '',\r\n        lname: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n  render() {\r\n    const {auth, authError} = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container section\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"fname\">First name</label>\r\n                <input type=\"text\" id=\"fname\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"lname\">Last name</label>\r\n                <input type=\"text\" id=\"lname\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button className=\"btn green z-depth-0 lighten-1\">Sign up</button>\r\n                <div className=\"red-text center\">\r\n                    { authError ? <p>{authError}</p> : null }\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)","import React, { Component } from 'react';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n  render() {\r\n      const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"container section\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"title\">Project Title</label>\r\n                <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"content\">Content</label>\r\n                <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button className=\"btn green z-depth-0 lighten-1\">Create</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => {dispatch(createProject(project))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject); // null is for mapStateToProps ","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const fireStore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        fireStore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.fName,\r\n            authorLastName: profile.lName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_PROJECT', project });\r\n        }).catch((err)=> {\r\n            dispatch({ type: 'ADD_PROJECT_ERROR', err });\r\n        });\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/navbar';\nimport Dashboard from './components/dashboard/dashboard';\nimport ProjectDetails from './components/project/projectDetails';\nimport Signin from './components/auth/signin';\nimport Signup from './components/auth/signup';\nimport CreateProject from './components/project/createProject';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={Signin} />\n            <Route path='/signup' component={Signup} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authMessage: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login failed');\r\n            return {\r\n                ...state,\r\n                authMessage: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login succeeded');\r\n            return {\r\n                ...state,\r\n                authMessage: null\r\n            }\r\n        case 'LOGOUT_SUCCESS':\r\n            console.log('logout success');\r\n            return state;\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'first project', author: 'Mohamed Saad'},\r\n        {id: '2', title: 'second project', author: 'Mohamed Saad'},\r\n        {id: '3', title: 'third project', author: 'Mohamed Saad'},\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_PROJECT':\r\n            console.log(\"create \", action.project);\r\n            return state;\r\n        case 'ADD_PROJECT_ERROR':\r\n            console.log('error: ', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authRecucer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// initialize firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyBlU0sr40caKN5h5ZJhIeloSKEEQruyQV8\",\r\n    authDomain: \"react-mario-da89a.firebaseapp.com\",\r\n    databaseURL: \"https://react-mario-da89a.firebaseio.com\",\r\n    projectId: \"react-mario-da89a\",\r\n    storageBucket: \"react-mario-da89a.appspot.com\",\r\n    messagingSenderId: \"947136184906\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { getFirestore, reduxFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport fireConfig from './config/fireConfig';\n\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fireConfig),\n    reactReduxFirebase(fireConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n));\n// to wait until the firebase authentication is ready to not show the links of signed out component\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.register();\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}